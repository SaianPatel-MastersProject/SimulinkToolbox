%% Copyright (c) 2022-2024 rFpro Ltd, All Rights Reserved.
%%
%% NOTICE:  All information contained herein is, and remains the property of rFpro. The intellectual and technical concepts contained
%% herein are proprietary to rFpro and may be covered by U.S. and foreign patents, patents in process, and are protected by trade secret or copyright law.
%% Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained from rFpro.
%%
%% The copyright notice above does not evidence any actual or intended publication or disclosure of this source code, which includes information that is confidential
%% and/or proprietary, and is a trade secret, of rFpro.  ANY REPRODUCTION, DISTRIBUTION, PUBLIC PERFORMANCE, OR PUBLIC DISPLAY OF THIS SOURCE CODE
%% WITHOUT THE EXPRESS WRITTEN CONSENT OF RFPRO IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE LAWS AND INTERNATIONAL TREATIES.
%% THE RECEIPT OR POSSESSION OF THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS TO REPRODUCE,
%% DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT MAY DESCRIBE, IN WHOLE OR IN PART.

%implements ReducedTelemInfoV01 "C"

%function BlockTypeSetup(block, system) Output
  %<LibAddToCommonIncludes("InternalsPlugin.hpp")>
  %openfile externs
    extern double simulinkModelTime;
    extern TelemInfoV01 simulinkInfo;
    extern bool wantsTelemetryUpdates;
  %closefile externs
  %<LibCacheExtern(externs)>
%endfunction

%function Start(block, system) Output
  wantsTelemetryUpdates = true;
%endfunction

%function Outputs(block, system) Output
  simulinkModelTime = %<LibGetTaskTimeFromTID(block)>;

  %% Validity
  %<LibBlockOutputSignal( 0, "", "", 0)> = true;
  %<LibBlockOutputSignal( 0, "", "", 1)> = true;
  %<LibBlockOutputSignal( 0, "", "", 2)> = true;
  %<LibBlockOutputSignal( 0, "", "", 3)> = true;
  %<LibBlockOutputSignal( 0, "", "", 4)> = true;
  %<LibBlockOutputSignal( 0, "", "", 5)> = true;
  %<LibBlockOutputSignal( 0, "", "", 6)> = true;
  %<LibBlockOutputSignal( 0, "", "", 7)> = true;

  %% Time  
  %<LibBlockOutputSignal( 1, "", "", 0)> = simulinkInfo.mElapsedTime;

  %% Position
  %<LibBlockOutputSignal( 2, "", "", 0)> = simulinkInfo.mPos[0];
  %<LibBlockOutputSignal( 2, "", "", 1)> = simulinkInfo.mPos[1];
  %<LibBlockOutputSignal( 2, "", "", 2)> = simulinkInfo.mPos[2];

  %% Driver input
  %<LibBlockOutputSignal( 3, "", "", 0)> = simulinkInfo.mUnfilteredThrottle;
  %<LibBlockOutputSignal( 3, "", "", 1)> = simulinkInfo.mUnfilteredBrake;
  %<LibBlockOutputSignal( 3, "", "", 2)> = simulinkInfo.mUnfilteredSteering;
  %<LibBlockOutputSignal( 3, "", "", 3)> = simulinkInfo.mUnfilteredClutch;

  %% Lap distance
  %<LibBlockOutputSignal( 4, "", "", 0)> = simulinkInfo.mLapDistanceTravelled;

  %% Orientation
  %<LibBlockOutputSignal( 5, "", "", 0)> = simulinkInfo.mOri[0][0];
  %<LibBlockOutputSignal( 5, "", "", 1)> = simulinkInfo.mOri[0][1];
  %<LibBlockOutputSignal( 5, "", "", 2)> = simulinkInfo.mOri[0][2];
  %<LibBlockOutputSignal( 5, "", "", 3)> = simulinkInfo.mOri[1][0];
  %<LibBlockOutputSignal( 5, "", "", 4)> = simulinkInfo.mOri[1][1];
  %<LibBlockOutputSignal( 5, "", "", 5)> = simulinkInfo.mOri[1][2];
  %<LibBlockOutputSignal( 5, "", "", 6)> = simulinkInfo.mOri[2][0];
  %<LibBlockOutputSignal( 5, "", "", 7)> = simulinkInfo.mOri[2][1];
  %<LibBlockOutputSignal( 5, "", "", 8)> = simulinkInfo.mOri[2][2];

  %% Velocity
  %<LibBlockOutputSignal( 6, "", "", 0)> = simulinkInfo.mLocalVel[0];
  %<LibBlockOutputSignal( 6, "", "", 1)> = simulinkInfo.mLocalVel[1];
  %<LibBlockOutputSignal( 6, "", "", 2)> = simulinkInfo.mLocalVel[2];

  %% Angular velocity
  %<LibBlockOutputSignal( 7, "", "", 0)> = simulinkInfo.mLocalRot[0];
  %<LibBlockOutputSignal( 7, "", "", 1)> = simulinkInfo.mLocalRot[1];
  %<LibBlockOutputSignal( 7, "", "", 2)> = simulinkInfo.mLocalRot[2];

  %% Lap refernce distance
  %<LibBlockOutputSignal( 8, "", "", 0)> = simulinkInfo.mSLapRef;
%endfunction
