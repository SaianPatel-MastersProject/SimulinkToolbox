%% Copyright (c) 2024 rFpro limited, All Rights Reserved.
%%
%% NOTICE:  All information contained herein is, and remains the property of rFpro. The intellectual and technical concepts contained
%% herein are proprietary to rFpro and may be covered by U.S. and foreign patents, patents in process, and are protected by trade secret or copyright law.
%% Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained from rFpro.
%%
%% The copyright notice above does not evidence any actual or intended publication or disclosure of this source code, which includes information that is confidential
%% and/or proprietary, and is a trade secret, of rFpro.  ANY REPRODUCTION, DISTRIBUTION, PUBLIC PERFORMANCE, OR PUBLIC DISPLAY OF THIS SOURCE CODE
%% WITHOUT THE EXPRESS WRITTEN CONSENT OF RFPRO IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE LAWS AND INTERNATIONAL TREATIES.
%% THE RECEIPT OR POSSESSION OF THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS TO REPRODUCE,
%% DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT MAY DESCRIBE, IN WHOLE OR IN PART.

%implements TelemOpponentsV01 "C"

%function BlockTypeSetup(block, system) Output
  %<LibAddToCommonIncludes("InternalsPlugin.hpp")>
  %<LibAddToCommonIncludes("TelemOpponentControl.hpp")>
  %openfile externs
    extern TelemetryOpponentList sl_TelemetryOpponents;
    extern bool wantsTelemetryUpdates;
    extern TelemInfoV01* vehicle_telemetry;
  %closefile externs
  %<LibCacheExtern(externs)>
%endfunction

%function Start(block, system) Output
  wantsTelemetryUpdates = true;
  sl_TelemetryOpponents.toggleTelemetry(true);
%endfunction

%function Outputs(block, system) Output
  vehicle_telemetry = sl_TelemetryOpponents.find_telemetry(%<LibBlockInputSignal(1, "", "", 0)>, %<LibBlockInputSignal(0, "", "", 0)>);

  if (vehicle_telemetry)
  {
    %% Integer outputs (4)
    %<LibBlockOutputSignal( 0, "", "", 0)> = vehicle_telemetry->mID;
    %<LibBlockOutputSignal( 0, "", "", 1)> = vehicle_telemetry->mLapNumber;
    %<LibBlockOutputSignal( 0, "", "", 2)> = vehicle_telemetry->mGear;
    %<LibBlockOutputSignal( 0, "", "", 3)> = vehicle_telemetry->mCurrentSector;

    %% Single outputs (12)
    %<LibBlockOutputSignal( 1, "", "",  0)> = vehicle_telemetry->mVisualSteeringWheelRange;
    %<LibBlockOutputSignal( 1, "", "",  1)> = vehicle_telemetry->mPhysicsToGraphicsOffset[0];
    %<LibBlockOutputSignal( 1, "", "",  2)> = vehicle_telemetry->mPhysicsToGraphicsOffset[1];
    %<LibBlockOutputSignal( 1, "", "",  3)> = vehicle_telemetry->mPhysicsToGraphicsOffset[2];
    %<LibBlockOutputSignal( 1, "", "",  4)> = vehicle_telemetry->mPhysicalSteeringWheelRange;
    %<LibBlockOutputSignal( 1, "", "",  5)> = vehicle_telemetry->mStandardLocation[0];
    %<LibBlockOutputSignal( 1, "", "",  6)> = vehicle_telemetry->mStandardLocation[1];
    %<LibBlockOutputSignal( 1, "", "",  7)> = vehicle_telemetry->mStandardLocation[2];
    %<LibBlockOutputSignal( 1, "", "",  8)> = vehicle_telemetry->mBrakeTorque[0];
    %<LibBlockOutputSignal( 1, "", "",  9)> = vehicle_telemetry->mBrakeTorque[1];
    %<LibBlockOutputSignal( 1, "", "", 10)> = vehicle_telemetry->mBrakeTorque[2];
    %<LibBlockOutputSignal( 1, "", "", 11)> = vehicle_telemetry->mBrakeTorque[3];
    %<LibBlockOutputSignal( 1, "", "", 12)> = vehicle_telemetry->mSLapRef;

    %% Double outputs (61)
    %<LibBlockOutputSignal( 2, "", "",  0)> = vehicle_telemetry->mDeltaTime;
    %<LibBlockOutputSignal( 2, "", "",  1)> = vehicle_telemetry->mElapsedTime;
    %<LibBlockOutputSignal( 2, "", "",  2)> = vehicle_telemetry->mLapStartET;
    %<LibBlockOutputSignal( 2, "", "",  3)> = vehicle_telemetry->mPos[0];
    %<LibBlockOutputSignal( 2, "", "",  4)> = vehicle_telemetry->mPos[1];
    %<LibBlockOutputSignal( 2, "", "",  5)> = vehicle_telemetry->mPos[2];
    %<LibBlockOutputSignal( 2, "", "",  6)> = vehicle_telemetry->mLocalVel[0];
    %<LibBlockOutputSignal( 2, "", "",  7)> = vehicle_telemetry->mLocalVel[1];
    %<LibBlockOutputSignal( 2, "", "",  8)> = vehicle_telemetry->mLocalVel[2];
    %<LibBlockOutputSignal( 2, "", "",  9)> = vehicle_telemetry->mLocalAccel[0];
    %<LibBlockOutputSignal( 2, "", "", 10)> = vehicle_telemetry->mLocalAccel[1];
    %<LibBlockOutputSignal( 2, "", "", 11)> = vehicle_telemetry->mLocalAccel[2];
    %<LibBlockOutputSignal( 2, "", "", 12)> = vehicle_telemetry->mOri[0][0];
    %<LibBlockOutputSignal( 2, "", "", 13)> = vehicle_telemetry->mOri[0][1];
    %<LibBlockOutputSignal( 2, "", "", 14)> = vehicle_telemetry->mOri[0][2];
    %<LibBlockOutputSignal( 2, "", "", 15)> = vehicle_telemetry->mOri[1][0];
    %<LibBlockOutputSignal( 2, "", "", 16)> = vehicle_telemetry->mOri[1][1];
    %<LibBlockOutputSignal( 2, "", "", 17)> = vehicle_telemetry->mOri[1][2];
    %<LibBlockOutputSignal( 2, "", "", 18)> = vehicle_telemetry->mOri[2][0];
    %<LibBlockOutputSignal( 2, "", "", 19)> = vehicle_telemetry->mOri[2][1];
    %<LibBlockOutputSignal( 2, "", "", 20)> = vehicle_telemetry->mOri[2][2];
    %<LibBlockOutputSignal( 2, "", "", 21)> = vehicle_telemetry->mLocalRot[0];
    %<LibBlockOutputSignal( 2, "", "", 22)> = vehicle_telemetry->mLocalRot[1];
    %<LibBlockOutputSignal( 2, "", "", 23)> = vehicle_telemetry->mLocalRot[2];
    %<LibBlockOutputSignal( 2, "", "", 24)> = vehicle_telemetry->mLocalRotAccel[0];
    %<LibBlockOutputSignal( 2, "", "", 25)> = vehicle_telemetry->mLocalRotAccel[1];
    %<LibBlockOutputSignal( 2, "", "", 26)> = vehicle_telemetry->mLocalRotAccel[2];
    %<LibBlockOutputSignal( 2, "", "", 27)> = vehicle_telemetry->mEngineRPM;
    %<LibBlockOutputSignal( 2, "", "", 28)> = vehicle_telemetry->mEngineWaterTemp;
    %<LibBlockOutputSignal( 2, "", "", 29)> = vehicle_telemetry->mEngineOilTemp;
    %<LibBlockOutputSignal( 2, "", "", 30)> = vehicle_telemetry->mClutchRPM;
    %<LibBlockOutputSignal( 2, "", "", 31)> = vehicle_telemetry->mUnfilteredThrottle;
    %<LibBlockOutputSignal( 2, "", "", 32)> = vehicle_telemetry->mUnfilteredBrake;
    %<LibBlockOutputSignal( 2, "", "", 33)> = vehicle_telemetry->mUnfilteredSteering;
    %<LibBlockOutputSignal( 2, "", "", 34)> = vehicle_telemetry->mUnfilteredClutch;
    %<LibBlockOutputSignal( 2, "", "", 35)> = vehicle_telemetry->mFilteredThrottle;
    %<LibBlockOutputSignal( 2, "", "", 36)> = vehicle_telemetry->mFilteredBrake;
    %<LibBlockOutputSignal( 2, "", "", 37)> = vehicle_telemetry->mFilteredSteering;
    %<LibBlockOutputSignal( 2, "", "", 38)> = vehicle_telemetry->mFilteredClutch;
    %<LibBlockOutputSignal( 2, "", "", 39)> = vehicle_telemetry->mSteeringArmForce;
    %<LibBlockOutputSignal( 2, "", "", 40)> = vehicle_telemetry->mFront3rdDeflection;
    %<LibBlockOutputSignal( 2, "", "", 41)> = vehicle_telemetry->mRear3rdDeflection;
    %<LibBlockOutputSignal( 2, "", "", 42)> = vehicle_telemetry->mFrontWingHeight;
    %<LibBlockOutputSignal( 2, "", "", 43)> = vehicle_telemetry->mFrontRideHeight;
    %<LibBlockOutputSignal( 2, "", "", 44)> = vehicle_telemetry->mRearRideHeight;
    %<LibBlockOutputSignal( 2, "", "", 45)> = vehicle_telemetry->mDrag;
    %<LibBlockOutputSignal( 2, "", "", 46)> = vehicle_telemetry->mFrontDownforce;
    %<LibBlockOutputSignal( 2, "", "", 47)> = vehicle_telemetry->mRearDownforce;
    %<LibBlockOutputSignal( 2, "", "", 48)> = vehicle_telemetry->mFuel;
    %<LibBlockOutputSignal( 2, "", "", 49)> = vehicle_telemetry->mEngineMaxRPM;
    %<LibBlockOutputSignal( 2, "", "", 50)> = vehicle_telemetry->mLastImpactET;
    %<LibBlockOutputSignal( 2, "", "", 51)> = vehicle_telemetry->mLastImpactMagnitude;
    %<LibBlockOutputSignal( 2, "", "", 52)> = vehicle_telemetry->mLastImpactPos[0];
    %<LibBlockOutputSignal( 2, "", "", 53)> = vehicle_telemetry->mLastImpactPos[1];
    %<LibBlockOutputSignal( 2, "", "", 54)> = vehicle_telemetry->mLastImpactPos[2];
    %<LibBlockOutputSignal( 2, "", "", 55)> = vehicle_telemetry->mEngineTq;
    %<LibBlockOutputSignal( 2, "", "", 56)> = vehicle_telemetry->mFuelCapacity;
    %<LibBlockOutputSignal( 2, "", "", 57)> = vehicle_telemetry->mRearBrakeBias;
    %<LibBlockOutputSignal( 2, "", "", 58)> = vehicle_telemetry->mTurboBoostPressure;
    %<LibBlockOutputSignal( 2, "", "", 59)> = vehicle_telemetry->mLapDistanceTravelled;
    %<LibBlockOutputSignal( 2, "", "", 60)> = vehicle_telemetry->mDistanceToGrooveCentre;

    %% Byte outputs (28)
    %<LibBlockOutputSignal( 3, "", "", 0)> = vehicle_telemetry->mScheduledStops;
    %<LibBlockOutputSignal( 3, "", "", 1)> = vehicle_telemetry->mOverheating;
    %<LibBlockOutputSignal( 3, "", "", 2)> = vehicle_telemetry->mDetached;
    %<LibBlockOutputSignal( 3, "", "", 3)> = vehicle_telemetry->mHeadlights;
    %<LibBlockOutputSignal( 3, "", "", 4)> = vehicle_telemetry->mDentSeverity[0];
    %<LibBlockOutputSignal( 3, "", "", 5)> = vehicle_telemetry->mDentSeverity[1];
    %<LibBlockOutputSignal( 3, "", "", 6)> = vehicle_telemetry->mDentSeverity[2];
    %<LibBlockOutputSignal( 3, "", "", 7)> = vehicle_telemetry->mDentSeverity[3];
    %<LibBlockOutputSignal( 3, "", "", 8)> = vehicle_telemetry->mDentSeverity[4];
    %<LibBlockOutputSignal( 3, "", "", 9)> = vehicle_telemetry->mDentSeverity[5];
    %<LibBlockOutputSignal( 3, "", "", 10)> = vehicle_telemetry->mDentSeverity[6];
    %<LibBlockOutputSignal( 3, "", "", 11)> = vehicle_telemetry->mDentSeverity[7];
    %<LibBlockOutputSignal( 3, "", "", 12)> = vehicle_telemetry->mSpeedLimiter;
    %<LibBlockOutputSignal( 3, "", "", 13)> = vehicle_telemetry->mMaxGears;
    %<LibBlockOutputSignal( 3, "", "", 14)> = vehicle_telemetry->mFrontTireCompoundIndex;
    %<LibBlockOutputSignal( 3, "", "", 15)> = vehicle_telemetry->mRearTireCompoundIndex;
    %<LibBlockOutputSignal( 3, "", "", 16)> = vehicle_telemetry->mFrontFlapActivated;
    %<LibBlockOutputSignal( 3, "", "", 17)> = vehicle_telemetry->mRearFlapActivated;
    %<LibBlockOutputSignal( 3, "", "", 18)> = vehicle_telemetry->mRearFlapLegalStatus;
    %<LibBlockOutputSignal( 3, "", "", 19)> = vehicle_telemetry->mIgnitionStarter;
    %<LibBlockOutputSignal( 3, "", "", 20)> = vehicle_telemetry->mSpeedLimiterAvailable;
    %<LibBlockOutputSignal( 3, "", "", 21)> = vehicle_telemetry->mAntiStallActivated;
    %<LibBlockOutputSignal( 3, "", "", 22)> = vehicle_telemetry->mBeacon[0];
    %<LibBlockOutputSignal( 3, "", "", 23)> = vehicle_telemetry->mBeacon[1];
    %<LibBlockOutputSignal( 3, "", "", 24)> = vehicle_telemetry->mBeacon[2];
    %<LibBlockOutputSignal( 3, "", "", 25)> = vehicle_telemetry->mBeacon[3];
    %<LibBlockOutputSignal( 3, "", "", 26)> = vehicle_telemetry->mBeacon[4];
    %<LibBlockOutputSignal( 3, "", "", 27)> = vehicle_telemetry->mBeacon[5];
  }
  else
  {
    %<LibBlockOutputSignal( 0, "", "", 0)> = -1;
  }
%endfunction
