%% Copyright (c) rFpro 2015. All rights reserved.

%implements UdpRx "C"

%function BlockTypeSetup(block, system) Output
    %<LibAddToCommonIncludes("UDPLink.hpp")>
    %<LibAddToModelSources("UDPLink")>
%endfunction

%function Start(block, system) Output
    %assign port = CAST("Number", %<LibBlockParameterValue(P2,0)>)
	%<LibBlockPWork(0, "", "", 0)> = new UDPLink::Receiver("%<port>", "%<LibBlockParameterString(P3)>");
%endfunction

%function Outputs(block, system) Output
{
    const size_t bytesReceived = ((UDPLink::Receiver *)%<LibBlockPWork(0, "", "", 0)>)->GetNextMessage();
    if (bytesReceived)
    {
        %<LibBlockOutputSignal(1, "", "", 0)> = bytesReceived;
        const size_t bytesToCopy = bytesReceived < (unsigned)%<LibBlockOutputSignalWidth(0)>? bytesReceived : %<LibBlockOutputSignalWidth(0)>;
        memcpy(%<LibBlockOutputSignalAddr(0, "", "", 0)>, ((UDPLink::Receiver *)%<LibBlockPWork(0, "", "", 0)>)->GetMessage(), bytesToCopy);
        %<LibBlockOutputSignal(2, "", "", 0)> = ((UDPLink::Receiver *)%<LibBlockPWork(0, "", "", 0)>)->BytesReceived();
        %<LibBlockOutputSignal(3, "", "", 0)> = ((UDPLink::Receiver *)%<LibBlockPWork(0, "", "", 0)>)->DatagramsReceived();
    }
}
%endfunction

%function Terminate(block, system) Output
    delete %<LibBlockPWork(0, "", "", 0)>;
%endfunction
