%% Copyright (c) 2021 rFpro Limited, All Rights Reserved.
%%
%% NOTICE:  All information contained herein is, and remains the property of rFpro Limited. The intellectual and technical concepts contained
%% herein are proprietary to rFpro and may be covered by U.S. and foreign patents, patents in process, and are protected by trade secret or copyright law.
%% Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained from rFpro.
%%
%% The copyright notice above does not evidence any actual or intended publication or disclosure of this source code, which includes information that is confidential
%% and/or proprietary, and is a trade secret, of rFpro.  ANY REPRODUCTION, DISTRIBUTION, PUBLIC PERFORMANCE, OR PUBLIC DISPLAY OF THIS SOURCE CODE
%% WITHOUT THE EXPRESS WRITTEN CONSENT OF RFPRO IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE LAWS AND INTERNATIONAL TREATIES.
%% THE RECEIPT OR POSSESSION OF THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS TO REPRODUCE,
%% DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT MAY DESCRIBE, IN WHOLE OR IN PART.

%implements BoundingBoxV01 "C"

%function BlockTypeSetup(block, system) Output
  %<LibAddToCommonIncludes("InternalsPluginExtras.hpp")>
  %<LibAddToCommonIncludes("BoundingBoxControl.hpp")>
  %% Put external variable reference in Model_private.h
  %openfile buffer
  extern bool simulinkWantsBoundingBoxes;
  extern BoundingBoxControl simulinkBBControl;
  %closefile buffer
  %<LibCacheFunctionPrototype(buffer)>
%endfunction


%function Start(block, system) Output
    %% Copy the names to the simulink variable using the byteStr parameter
    %assign grp = LibBlockParameterValue(P2, 0)

    std::vector<std::string> names_%<grp>;
    for (unsigned lp=0; lp < (%<LibBlockParameterWidth(P1)> / 64); ++lp)
    {
      %% currName = (char*)&%<LibBlockMatrixParameter(P1,"64*lp","",0,"","",0)>;
      names_%<grp>.push_back((char*)&%<LibBlockMatrixParameter(P1,"64*lp","",0,"","",0)>);
    }
    simulinkBBControl.add_new_group(%<LibBlockParameterValue(P2, 0)>, names_%<grp>);

    %% Set the switch to generate bounding boxes
    simulinkWantsBoundingBoxes = true;
%endfunction

%function Outputs(block, system) Output
  %assign grp = LibBlockParameterValue(P2, 0)
  double* vector_%<grp> = simulinkBBControl.get_group_vector(%<grp>);

  memcpy(%<LibBlockOutputSignalAddr(0, "", "", 0)>, vector_%<grp>, %<LibBlockParameterValue(P3, 0)>*sizeof(double));
  memcpy(%<LibBlockOutputSignalAddr(1, "", "", 0)>, vector_%<grp> + BoundingBoxControl::MAX_BOXES, %<LibBlockParameterValue(P3, 0)>*24*sizeof(double));

%endfunction
